/*
 Copyright 2016 Goldman Sachs.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied.  See the License for the
 specific language governing permissions and limitations
 under the License.
 */

/* Generated By:JJTree&JavaCC: Do not edit this line. MithraQLConstants.java */
package com.gs.fw.common.mithra.generator.queryparser;

public interface MithraQLConstants {

  int EOF = 0;
  int COMMENT_LINE = 5;
  int AND = 6;
  int OR = 7;
  int NOT = 8;
  int NULL = 9;
  int IS = 10;
  int EQUALSEDGEPOINT = 11;
  int ORDER = 12;
  int BY = 13;
  int ASC = 14;
  int DESC = 15;
  int DOT = 16;
  int EQUAL = 17;
  int NOTEQUAL = 18;
  int GREATER_THAN = 19;
  int LESSER_THAN = 20;
  int GREATER_THAN_EQUAL = 21;
  int LESSER_THAN_EQUAL = 22;
  int CONTAINS = 23;
  int STARTS_WITH = 24;
  int ENDS_WITH = 25;
  int OPEN_PAREN = 26;
  int CLOSE_PAREN = 27;
  int COMMA = 28;
  int IN = 29;
  int INTEGER_LITERAL = 30;
  int FLOATING_POINT_LITERAL = 31;
  int EXPONENT = 32;
  int STRING_LITERAL = 33;
  int CHARACTER_LITERAL = 34;
  int BOOLEAN_LITERAL = 35;
  int JAVA_LITERAL = 36;
  int IDENTIFIER = 37;
  int LETTER = 38;
  int DIGIT = 39;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "<COMMENT_LINE>",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\"null\"",
    "\"is\"",
    "\"equalsEdgePoint\"",
    "\"order \"",
    "\"by\"",
    "\"asc\"",
    "\"desc\"",
    "\".\"",
    "\"=\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"contains\"",
    "\"startsWith\"",
    "\"endsWith\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"in\"",
    "<INTEGER_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<STRING_LITERAL>",
    "<CHARACTER_LITERAL>",
    "<BOOLEAN_LITERAL>",
    "<JAVA_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
  };

}
